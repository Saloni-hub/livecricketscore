{"version":3,"sources":["components/Navbar.js","API/Api.js","components/Mycard.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","AppBar","position","Toolbar","IconButton","color","Typography","variant","API_Key","getMatches","url","fetch","then","resp","json","catch","error","console","log","Mycard","match","useState","detail","setdetail","open","setopen","handleClick","id","getMatchDetails","data","handleOpen","err","handleClose","Card","style","marginTop","CardContent","Grid","container","justify","alignItems","spacing","item","width","src","alt","CardActions","Button","onClick","unique_id","marginLeft","Date","dateTimeGMT","toLocaleString","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","stat","fontStyle","fontWeight","matchStarted","score","DialogActions","autoFocus","App","matches","setmatches","useEffect","alert","className","sm","map","Fragment","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02006217.chunk.js","sourcesContent":["import { AppBar, IconButton, Toolbar, Typography, } from '@material-ui/core'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport React from 'react';\r\nexport default function Navbar() {\r\n    return (\r\n        <>\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <IconButton color=\"inherit\">\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\">Live Score</Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    </>\r\n    );\r\n};\r\n\r\n","const API_Key = \"mLIFjBhNGnbPPOTGEvWaDwODSko1\"\r\n const getMatches = () => {\r\n    const url = `https://cricapi.com/api/matches/?apikey=${API_Key}`;\r\n    return fetch(url).then((resp) => resp.json())\r\n    .catch((error) => console.log(\"Error\",error))\r\n};\r\nexport default getMatches\r\n\r\n// load match details\r\nexport const getMatchDetails = (id) => {\r\n    const url = `https://cricapi.com/api/cricketScore/?apikey=${API_Key}&unique_id=${id}`;\r\n    return fetch(url)\r\n    .then(resp => resp.json())\r\n    .catch((error) => console.log(error));\r\n}","import { Typography, Card, CardContent, CardActions,Button,Grid,Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\n\r\nimport { getMatchDetails } from '../API/Api'\r\n\r\nconst Mycard = ({match}) => {\r\n    const [detail,setdetail] = useState({});\r\n    const [open,setopen] = useState(false)\r\n    const handleClick = (id) => {\r\n        getMatchDetails(id).then((data)=>{console.log(\"Match data\",data)\r\n        setdetail(data);\r\n        handleOpen();\r\n    })\r\n        .catch((err)=>console.log(err))\r\n    }\r\n    const getMatchCard = () => {\r\n        return (\r\n            <Card style={{marginTop:15}}>\r\n                <CardContent>\r\n                   <Grid container justify=\"center\" alignItems=\"center\" spacing=\"4\">\r\n                       <Grid item><Typography variant=\"h5\">{match[\"team-1\"]}</Typography></Grid>\r\n                       <Grid item>\r\n                          <img style={{width:85}} src=\"vs1.png\" alt=\"myImg\"></img>\r\n                       </Grid>\r\n                       <Grid item><Typography variant=\"h5\">{match[\"team-2\"]}</Typography></Grid>\r\n                   </Grid>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Grid container justify=\"center\">\r\n                        <Button onClick={()=>{\r\n                            handleClick(match.unique_id)\r\n                        }}  variant=\"contained\" color=\"primary\">show detail</Button>\r\n                        <Button style={{marginLeft:5}} variant=\"contained\" color=\"primary\">Start Time {new Date(match.dateTimeGMT).toLocaleString()}</Button>\r\n                    </Grid>\r\n                </CardActions>\r\n            </Card>\r\n        )\r\n    };\r\n    const handleClose = () => {\r\n        setopen(false)\r\n    }\r\n     const handleOpen = () =>{\r\n         setopen(true)\r\n     }\r\n    const getDialog = () => (\r\n        <Dialog open={open} onClose={handleClose}>\r\n            <DialogTitle id=\"alert-dialog-title\">{\"Match Detail...\"}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-discription\">\r\n                <Typography>{detail.stat}</Typography>\r\n                <Typography>\r\n                    Match <span style={{fontStyle:\"italic\",fontWeight:\"bold\"}}>{detail.matchStarted? \"Started\": \"Still not started\"}{\" \"}</span>\r\n                </Typography>\r\n                <Typography>\r\n                    Score <span style={{fontStyle:\"italic\",fontWeight:\"bold\"}}>\r\n                    {\" \"}\r\n                    {detail.score}\r\n                    </span>\r\n                </Typography>\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\" autoFocus>Close</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n    return (\r\n       <>\r\n        {getMatchCard()}\r\n        {getDialog()}\r\n       </>\r\n    );\r\n\r\n}\r\nexport default Mycard;","\nimport './App.css';\nimport Navbar from './components/Navbar'\nimport { Grid,Typography } from \"@material-ui/core\"\nimport Mycard from './components/Mycard'\nimport getMatches from './API/Api';\nimport { useEffect,useState } from 'react';\nimport React from 'react';\nfunction App() {\n  const [matches,setmatches] = useState([]);\n  useEffect(() => {\n    getMatches().then((data)=> {\n      setmatches(data.matches)\n      console.log(data.matches)\n    }).catch(error=>alert(\"could not load data\"));\n  }, []);\n  return (\n    <div className=\"App\">\n     <Navbar />\n     <Typography variant=\"h3\" style={{marginTop: 20}}>Welcome to my live score app</Typography>\n     <Grid container>\n       <Grid sm=\"2\"></Grid>\n       <Grid sm=\"8\">\n       {\n       matches.map((match) => (\n        <React.Fragment key={match.unique_id}>\n           {(match.type === \"Twenty20\") ? <Mycard key={match.unique_id} match={match}/> : \" \"}\n        </React.Fragment>\n       ))}\n       </Grid>\n     </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}